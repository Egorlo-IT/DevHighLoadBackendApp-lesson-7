{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/constants.ts","webpack:///./src/app/auth/jwt-auth.guard.ts","webpack:///./src/app/auth/jwt.strategy.ts","webpack:///./src/app/auth/local-auth.guard.ts","webpack:///./src/app/auth/local.strategy.ts","webpack:///./src/app/auth/role/role.enum.ts","webpack:///./src/app/auth/role/roles.decorator.ts","webpack:///./src/app/auth/ws-jwt.guard.ts","webpack:///./src/app/categories/categories.controller.ts","webpack:///./src/app/categories/categories.entity.ts","webpack:///./src/app/categories/categories.module.ts","webpack:///./src/app/categories/categories.service.ts","webpack:///./src/app/mail/mail.config.service.ts","webpack:///./src/app/mail/mail.controller.ts","webpack:///./src/app/mail/mail.module.ts","webpack:///./src/app/mail/mail.service.ts","webpack:///./src/app/news/comments/comments.controller.ts","webpack:///./src/app/news/comments/comments.entity.ts","webpack:///./src/app/news/comments/comments.module.ts","webpack:///./src/app/news/comments/comments.service.ts","webpack:///./src/app/news/comments/dtos/comment-create.dto.ts","webpack:///./src/app/news/comments/socket-comments.gateway.ts","webpack:///./src/app/news/dtos/news-create.dto.ts","webpack:///./src/app/news/dtos/news-id.dto.ts","webpack:///./src/app/news/news.controller.ts","webpack:///./src/app/news/news.entity.ts","webpack:///./src/app/news/news.module.ts","webpack:///./src/app/news/news.service.ts","webpack:///./src/app/users/dto/user-create.dto.ts","webpack:///./src/app/users/profile/profile.controller.ts","webpack:///./src/app/users/profile/profile.module.ts","webpack:///./src/app/users/users.controller.ts","webpack:///./src/app/users/users.entity.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.service.ts","webpack:///./src/app/utils/crypto.ts","webpack:///./src/app/utils/helperFileLoaderNews.ts","webpack:///./src/app/utils/helperFileLoaderUser.ts","webpack:///./src/app/utils/imageFileFilter.ts","webpack:///./src/pgConfigService.ts","webpack:///./src/utils/crypto.ts","webpack:///external commonjs \"@nestjs-modules/mailer\"","webpack:///external commonjs \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\"","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/common/pipes\"","webpack:///external commonjs \"@nestjs/config\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"@nestjs/event-emitter\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"@nestjs/passport\"","webpack:///external commonjs \"@nestjs/platform-express\"","webpack:///external commonjs \"@nestjs/swagger\"","webpack:///external commonjs \"@nestjs/typeorm\"","webpack:///external commonjs \"@nestjs/websockets\"","webpack:///external commonjs \"bcrypt\"","webpack:///external commonjs \"cache-manager-redis-store\"","webpack:///external commonjs \"class-validator\"","webpack:///external commonjs \"ioredis\"","webpack:///external commonjs \"multer\"","webpack:///external commonjs \"passport-jwt\"","webpack:///external commonjs \"passport-local\"","webpack:///external commonjs \"socket.io\"","webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"typeorm\"","webpack:///external commonjs \"uuid\"","webpack:///external node-commonjs \"path\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Render,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { AppService } from './app.service';\nimport { AuthService } from './auth/auth.service';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\n\n@Controller()\n@ApiBearerAuth()\n@ApiTags('Security and other')\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly authService: AuthService\n  ) {}\n\n  @Get()\n  @Render('index')\n  @ApiOperation({ summary: 'Get home page' })\n  @ApiResponse({\n    status: 200,\n    description: 'Home page successfully received',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async getHello(): Promise<{ message: unknown }> {\n    const message = this.appService.getData();\n    return { message };\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  @ApiOperation({ summary: 'Get auth/login' })\n  @ApiResponse({\n    status: 200,\n    description: 'Authorization successful',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async login(@Request() req) {\n    const access_token = await this.authService.login(req.user);\n    return access_token;\n  }\n\n  @Post('auth/logout')\n  @ApiOperation({ summary: 'Get auth/logout' })\n  @ApiResponse({\n    status: 200,\n    description: 'Logout completed successfully',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async logout() {\n    return true;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('auth/user')\n  @ApiOperation({ summary: 'Get auth/user' })\n  @ApiResponse({\n    status: 200,\n    description: 'User successfully received',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  getProfile(@Request() req) {\n    const user = {\n      id: req.user.id,\n      firstName: req.user.firstName,\n      lastName: req.user.lastName,\n      email: req.user.email,\n      roles: req.user.roles,\n      avatar: req?.user?.avatar,\n    };\n    return user;\n  }\n}\n","import { CacheModule, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { NewsModule } from './news/news.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { MailModule } from './mail/mail.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PgConfigService } from '../pgConfigService';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport redisStore from 'cache-manager-redis-store';\n\n@Module({\n  imports: [\n    NewsModule,\n    CategoriesModule,\n    MailModule,\n    UsersModule,\n    AuthModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: '.development.env',\n    }),\n    TypeOrmModule.forRootAsync({\n      useClass: PgConfigService,\n      inject: [PgConfigService],\n    }),\n    EventEmitterModule.forRoot(),\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    CacheModule.register<any>({\n      isGlobal: true,\n      store: redisStore,\n      host: 'localhost',\n      port: 6379,\n    }),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to api!' };\n  }\n}\n","import { forwardRef, Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    forwardRef(() => UsersModule),\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersEntity } from '../users/users.entity';\nimport { UsersService } from '../users/users.service';\nimport { compare } from '../utils/crypto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService\n  ) {}\n\n  async validateUser(email: string, pass: string): Promise<UsersEntity | null> {\n    const user = await this.usersService.findByEmail(email);\n    if (user && (await compare(pass, user.password))) {\n      return user;\n    }\n    return null;\n  }\n\n  async login(user: UsersEntity) {\n    const payload = user;\n    const currDate = new Date();\n    const calculatedExpiresIn =\n      currDate.getTime() +\n      60 * 600 * 1000 -\n      (currDate.getTime() - currDate.getMilliseconds()) / 1000;\n    return {\n      access_token: this.jwtService.sign(payload, {\n        expiresIn: calculatedExpiresIn,\n      }),\n    };\n  }\n\n  async verify(token: string) {\n    return this.jwtService.verify(token);\n  }\n\n  async decode(token: string) {\n    return this.jwtService.decode(token);\n  }\n}\n","export const jwtConstants = {\n  secret: 'secretKey',\n};\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n","import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n  async validate(payload: unknown) {\n    return payload;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n","import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(email: string, password: string): Promise<unknown> {\n    const userEntity = await this.authService.validateUser(email, password);\n    if (!userEntity) {\n      throw new UnauthorizedException();\n    }\n    const user = {\n      ...userEntity,\n    };\n    return user;\n  }\n}\n","export enum Role {\n  User = 'user',\n  Admin = 'admin',\n  Moderator = 'moderator',\n}\n","import { SetMetadata } from '@nestjs/common';\nimport { Role } from './role.enum';\n\nexport const ROLES_KEY = 'roles';\nexport const Roles = (...roles: Role[]) => SetMetadata(ROLES_KEY, roles);\n","import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class WsJwtGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n  async canActivate(context: ExecutionContext) {\n    try {\n      // Особым образом извлекаем информацию о клиенте\n      const client = context.switchToWs().getClient();\n\n      // Извлекаем токен\n      const authToken: string =\n        client.handshake.headers.authorization.split(' ')[1];\n\n      // Вызываем метод проверки токена из сервиса authService\n      const isAuth = await this.authService.verify(authToken);\n\n      if (isAuth) {\n        // Декодируем токен и извлекаем информацию о пользователе\n        const user = await this.authService.decode(authToken);\n\n        // Информацию о пользователе записываем в поле data нашего клиента\n        context.switchToWs().getClient().data.user = user;\n        return true;\n      }\n      return false;\n    } catch {\n      return false;\n    }\n  }\n}\n","import { Body, Controller, Post, UseGuards } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesEntity } from './categories.entity';\nimport { Roles } from '../auth/role/roles.decorator';\nimport { Role } from '../auth/role/role.enum';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\n@Controller('categories')\n@ApiBearerAuth()\n@ApiTags('Categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Post('create')\n  @UseGuards(JwtAuthGuard)\n  @Roles(Role.Admin)\n  @ApiOperation({ summary: 'Category creation' })\n  @ApiResponse({\n    status: 200,\n    description: 'Category successfully created',\n    type: CategoriesEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async create(@Body('name') name): Promise<CategoriesEntity> {\n    return this.categoriesService.create(name);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Entity,\n  Column,\n  // PrimaryGeneratedColumn,\n  OneToMany,\n  ObjectIdColumn,\n  ObjectID,\n} from 'typeorm';\nimport { NewsEntity } from '../news/news.entity';\n\n@Entity('categories')\nexport class CategoriesEntity {\n  // @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  @ApiProperty({ example: 'Category id', description: 'User id' })\n  id: ObjectID;\n\n  @Column('text')\n  @ApiProperty({ example: 'Category name', description: 'Category name' })\n  name: string;\n\n  @OneToMany(() => NewsEntity, (news) => news.category)\n  news: NewsEntity[];\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesEntity } from './categories.entity';\nimport { CategoriesService } from './categories.service';\n\n@Module({\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n  imports: [TypeOrmModule.forFeature([CategoriesEntity])],\n  exports: [CategoriesService],\n})\nexport class CategoriesModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CategoriesEntity } from './categories.entity';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    @InjectRepository(CategoriesEntity)\n    private readonly categoriesRepository: Repository<CategoriesEntity>\n  ) {}\n\n  async create(name: string) {\n    return await this.categoriesRepository.save({ name });\n  }\n\n  async findById(id: string): Promise<CategoriesEntity> {\n    const data = await this.categoriesRepository.findOneById(id);\n\n    return data;\n  }\n}\n","import { MailerOptions, MailerOptionsFactory } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\n\n@Injectable()\nexport class MailConfigService implements MailerOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createMailerOptions(): MailerOptions | Promise<MailerOptions> {\n    return {\n      transport:\n        'smtps://' +\n        this.configService.get<string>('MAILER_EMAIL') +\n        ':' +\n        this.configService.get<string>('MAILER_PASSWORD') +\n        '@' +\n        this.configService.get<string>('MAILER_SERVER'),\n      defaults: {\n        from:\n          '\"NestJS робот\" <' +\n          this.configService.get<string>('MAILER_EMAIL') +\n          '>',\n      },\n      template: {\n        dir: join(__dirname, 'templates'),\n        adapter: new HandlebarsAdapter(),\n        options: {\n          strict: true,\n        },\n      },\n    };\n  }\n}\n","import { Controller, Get } from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { MailService } from './mail.service';\n\n@Controller('mail')\n@ApiBearerAuth()\n@ApiTags('Email')\nexport class MailController {\n  constructor(private readonly mailService: MailService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Send email' })\n  @ApiResponse({\n    status: 200,\n    description: 'Mail sent successfully',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async sendTestEmail() {\n    return await this.mailService.sendTest();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { MailConfigService } from './mail.config.service';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useClass: MailConfigService,\n      inject: [MailConfigService],\n    }),\n  ],\n  providers: [MailService],\n  controllers: [MailController],\n  exports: [MailService],\n})\nexport class MailModule {}\n","import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { NewsEntity } from '../news/news.entity';\n\n@Injectable()\nexport class MailService {\n  constructor(private readonly mailerService: MailerService) {}\n  async sendTest() {\n    console.log('Отправляется письмо установки');\n    return this.mailerService\n      .sendMail({\n        to: 'egorlo059@gmail.com',\n        subject: 'Первое тестовое письмо',\n        template: './test',\n      })\n      .then((res) => {\n        console.log('res', res);\n      })\n      .catch((err) => {\n        console.log('err', err);\n      });\n  }\n  async sendNewNewsForAdmins(\n    emails: string[],\n    news: NewsEntity\n  ): Promise<void> {\n    console.log('news:', news);\n\n    console.log('Отправляются письма о новой новости администрации ресурса');\n    for (const email of emails) {\n      await this.mailerService\n        .sendMail({\n          to: email,\n          subject: `Создана новая новость: ${news.title}`,\n          template: './new-news',\n          context: news,\n        })\n        .then((res) => {\n          console.log('res', res);\n        })\n        .catch((err) => {\n          console.log('err', err);\n        });\n    }\n  }\n}\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { CommentsService } from './comments.service';\nimport { CommentCreateDto } from './dtos/comment-create.dto';\nimport { JwtAuthGuard } from '../../auth/jwt-auth.guard';\nimport { NewsIdDto } from '../dtos/news-id.dto';\nimport { ParseIntPipe } from '@nestjs/common/pipes';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CommentsEntity } from './comments.entity';\n\n@Controller('news-comments')\n@ApiBearerAuth()\n@ApiTags('Сomments')\nexport class CommentsController {\n  constructor(private readonly commentsService: CommentsService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post('create/:idNews')\n  @ApiOperation({ summary: 'News creation' })\n  @ApiResponse({\n    status: 200,\n    description: 'Comment successfully created',\n    type: CommentsEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  create(\n    @Param('idNews', ParseIntPipe) idNews: string,\n    @Body() comment: CommentCreateDto\n  ) {\n    return this.commentsService.create(idNews, comment.message, comment.userId);\n  }\n\n  @Post('edit/:idComment/:idNews')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Comment edit' })\n  @ApiResponse({\n    status: 200,\n    description: 'Comment successfully edit',\n    type: CommentsEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async edit(\n    @Param('idComment', ParseIntPipe) idComment: string,\n    @Param('idNews', ParseIntPipe) idNews: string,\n    @Body() comment: CommentCreateDto\n  ) {\n    return this.commentsService.edit(\n      idComment,\n      idNews,\n      comment.message,\n      comment.userId\n    );\n  }\n\n  @Delete(':idComment/:idNews')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Comment delete' })\n  @ApiResponse({\n    status: 200,\n    description: 'Comment successfully deleted',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async remove(\n    @Param('idComment', ParseIntPipe) idComment: string,\n    @Param('idNews', ParseIntPipe) idNews: string\n  ) {\n    return this.commentsService.remove(idComment, idNews);\n  }\n\n  @Get('all/news/:id')\n  @ApiOperation({ summary: 'Get comments' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiResponse({\n    status: 200,\n    description: 'Comments successfully received',\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async getAll(@Param() params: NewsIdDto) {\n    const commentsData = await this.commentsService.findAll(params.id);\n    const comments = JSON.parse(\n      JSON.stringify(commentsData),\n      function (key, value) {\n        if (key == 'password' || key == 'email') return;\n        return value;\n      }\n    );\n    return comments;\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Entity,\n  Column,\n  // PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  ObjectIdColumn,\n  ObjectID,\n} from 'typeorm';\nimport { UsersEntity } from '../../users/users.entity';\nimport { NewsEntity } from '../news.entity';\n\n@Entity('comments')\nexport class CommentsEntity {\n  // @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  @ApiProperty({ example: 'Comment id', description: 'Comment id' })\n  id: ObjectID;\n\n  @Column('text')\n  @ApiProperty({ example: 'Comment message', description: 'Comment message' })\n  message: string;\n\n  @Column(() => UsersEntity)\n  @ManyToOne(() => UsersEntity, (user) => user.comments)\n  user: UsersEntity;\n\n  @Column(() => NewsEntity)\n  @ManyToOne(() => NewsEntity, (news) => news.comments)\n  news: NewsEntity;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date create comment',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date update comment',\n  })\n  updatedAt: Date;\n}\n","import { forwardRef, Module } from '@nestjs/common';\nimport { CommentsService } from './comments.service';\nimport { SocketCommentsGateway } from './socket-comments.gateway';\nimport { CommentsController } from './comments.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CommentsEntity } from './comments.entity';\nimport { NewsModule } from '../news.module';\nimport { UsersModule } from '../../users/users.module';\nimport { AuthModule } from '../../auth/auth.module';\n\n@Module({\n  providers: [CommentsService, SocketCommentsGateway],\n  controllers: [CommentsController],\n  imports: [\n    forwardRef(() => NewsModule),\n    UsersModule,\n    AuthModule,\n    TypeOrmModule.forFeature([CommentsEntity]),\n  ],\n  exports: [CommentsService],\n})\nexport class CommentsModule {}\n","import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UsersService } from '../../users/users.service';\nimport { Repository } from 'typeorm';\nimport { NewsService } from '../news.service';\nimport { CommentsEntity } from './comments.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\n\n@Injectable()\nexport class CommentsService {\n  constructor(\n    @InjectRepository(CommentsEntity)\n    private readonly commentsRepository: Repository<CommentsEntity>,\n    private readonly userService: UsersService,\n    private readonly newsService: NewsService,\n    private readonly eventEmitter: EventEmitter2\n  ) {}\n\n  async findAll(id: string): Promise<CommentsEntity[]> {\n    console.log('id', id);\n\n    const data = await this.commentsRepository.find().then((result) => {\n      console.log('result:', result);\n\n      // const filterData = result.filter((item) => item.news.id === id);\n      return result;\n    });\n\n    return data;\n  }\n\n  async findById(id: string): Promise<CommentsEntity> {\n    const data = await this.commentsRepository.find({\n      // where: {\n      //   id: id,\n      // },\n      // relations: ['user', 'news'],\n    });\n    return data[0];\n  }\n\n  async create(\n    idNews: string,\n    message: string,\n    userId: string\n  ): Promise<CommentsEntity | HttpException> {\n    // console.log('idNews', idNews);\n    // console.log('userId', userId);\n\n    const _news = await this.newsService.findById(idNews);\n    const _user = await this.userService.findById(userId);\n    if (!_news || !_user) {\n      throw new HttpException(\n        'Не существует такой новости или пользователя',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    const _commentEntity = new CommentsEntity();\n    _commentEntity.message = message;\n    _commentEntity.news = _news;\n    _commentEntity.user = _user;\n    return await this.commentsRepository.save(_commentEntity);\n  }\n\n  async remove(idComment: string, idNews: string) {\n    const _comment = await this.findById(idComment);\n\n    console.log('CommentsService comment.remove');\n\n    this.eventEmitter.emit('comment.remove', {\n      idComment: _comment.id,\n      idNews: idNews,\n    });\n    return await this.commentsRepository.remove(_comment);\n  }\n\n  async removeAll(idNews) {\n    const _comments = await this.findAll(idNews);\n    return await this.commentsRepository.remove(_comments);\n  }\n\n  async edit(\n    idComment: string,\n    idNews: string,\n    message: string,\n    userId: string\n  ): Promise<CommentsEntity> {\n    const _news = await this.newsService.findById(idNews);\n    const _user = await this.userService.findById(userId);\n    if (!_news || !_user) {\n      throw new HttpException(\n        'Не существует такой новости или пользователя',\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    const _commentEntity = new CommentsEntity();\n    _commentEntity.message = message;\n    _commentEntity.news = _news;\n    _commentEntity.user = _user;\n    await this.commentsRepository.update(idComment, _commentEntity);\n    return _commentEntity;\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\nexport class CommentCreateDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'Comment message', description: 'Comment message' })\n  message: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'User id', description: 'User id' })\n  userId: string;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  SubscribeMessage,\n  WebSocketGateway,\n  OnGatewayInit,\n  WebSocketServer,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n} from '@nestjs/websockets';\nimport { Logger, UseGuards } from '@nestjs/common';\nimport { Socket, Server } from 'socket.io';\nimport { WsJwtGuard } from '../../auth/ws-jwt.guard';\nimport { CommentsService } from './comments.service';\nimport { OnEvent } from '@nestjs/event-emitter';\n\nexport type Comment = { message: string; idNews: string; idComment?: string };\n\n@WebSocketGateway({ cors: true })\nexport class SocketCommentsGateway\n  implements OnGatewayInit, OnGatewayConnection, OnGatewayDisconnect\n{\n  @WebSocketServer() server: Server;\n  private logger: Logger = new Logger('AppGateway');\n\n  constructor(private readonly commentsService: CommentsService) {}\n\n  @UseGuards(WsJwtGuard)\n  @SubscribeMessage('addComment')\n  async handleMessage(client: Socket, comment: Comment): Promise<void> {\n    const { idNews, message } = comment;\n\n    console.log('idNews:', idNews);\n    console.log('message:', message);\n\n    const userId: string = client.data.user.id;\n    const _comment = await this.commentsService.create(idNews, message, userId);\n    this.server.to(idNews.toString()).emit('newComment', _comment);\n  }\n\n  @UseGuards(WsJwtGuard)\n  @SubscribeMessage('editComment')\n  async handleMessageEditComment(\n    client: Socket,\n    comment: Comment\n  ): Promise<void> {\n    const { idComment, idNews, message } = comment;\n\n    console.log(idComment, idNews, message);\n\n    const userId: string = client.data.user.id;\n    await this.commentsService.edit(idComment, idNews, message, userId);\n    const comments = await this.commentsService.findAll(idNews);\n\n    console.log('comments:', comments);\n\n    this.server.to(idNews.toString()).emit('editComment', { comments });\n  }\n\n  @OnEvent('comment.remove')\n  handleRemoveCommentEvent(payload): void {\n    console.log('SocketCommentsGateway comment.remove');\n    const { idComment, idNews } = payload;\n    this.server.to(idNews.toString()).emit('removeComment', { idComment });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  afterInit(server: Server): void {\n    this.logger.log('Init');\n  }\n\n  handleDisconnect(client: Socket): void {\n    this.logger.log(`Client disconnected: ${client.id}`);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async handleConnection(client: Socket, ...args: any[]): Promise<void> {\n    const { newsId } = client.handshake.query;\n    // После подключения пользователя к веб-сокету, подключаем его в комнату\n    client.join(newsId);\n    this.logger.log(`Client connected: ${client.id}`);\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, ValidateIf } from 'class-validator';\nexport class NewsCreateDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'News title', description: 'News title' })\n  title: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'News description', description: 'News description' })\n  description: string;\n\n  @ValidateIf((o) => o.cover)\n  @IsString()\n  @ApiProperty({ example: 'News cover', description: 'News cover' })\n  cover: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'Author id', description: 'Author id' })\n  authorId: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'Category id', description: 'Category id' })\n  categoryId: string;\n}\n","import { IsNotEmpty, IsString } from 'class-validator';\nexport class NewsIdDto {\n  @IsNotEmpty()\n  @IsString()\n  id: string;\n}\n","import {\n  Body,\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n  Post,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { diskStorage } from 'multer';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { CategoriesService } from '../categories/categories.service';\n// import { MailService } from '../mail/mail.service';\nimport { UsersService } from '../users/users.service';\nimport { HelperFileLoaderNews } from '../utils/helperFileLoaderNews';\nimport { imageFileFilter } from '../utils/imageFileFilter';\nimport { CommentsService } from './comments/comments.service';\nimport { NewsCreateDto } from './dtos/news-create.dto';\nimport { NewsIdDto } from './dtos/news-id.dto';\nimport { NewsEntity } from './news.entity';\nimport { NewsService } from './news.service';\nimport Redis from 'ioredis';\n\nconst redis = new Redis();\n\nconst NEWS_PATH = '/news-static/';\nconst newsHelperFileLoader = new HelperFileLoaderNews();\nnewsHelperFileLoader.path = NEWS_PATH;\n\n@Controller('news')\n@ApiBearerAuth()\n@ApiTags('News')\nexport class NewsController {\n  constructor(\n    private readonly newsService: NewsService,\n    private usersService: UsersService,\n    private readonly commentsService: CommentsService,\n    private categoriesService: CategoriesService // private mailService: MailService\n  ) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Get all news' })\n  @ApiResponse({\n    status: 200,\n    description: 'News successfully received',\n    type: NewsEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async getAll(): Promise<{ news: NewsEntity[] }> {\n    const news = await this.newsService.findAll();\n    const data = JSON.parse(JSON.stringify(news), function (key, value) {\n      if (key == 'password' || key == 'email') return;\n      return value;\n    });\n\n    return data;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('create')\n  @UseInterceptors(\n    FileInterceptor('cover', {\n      storage: diskStorage({\n        destination: newsHelperFileLoader.destinationPath,\n        filename: newsHelperFileLoader.customFileName,\n      }),\n      fileFilter: imageFileFilter,\n    })\n  )\n  @ApiOperation({ summary: 'News creation' })\n  @ApiResponse({\n    status: 200,\n    description: 'News successfully created',\n    type: NewsEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async create(\n    @Body() news: NewsCreateDto,\n    @UploadedFile() cover: Express.Multer.File\n  ) {\n    try {\n      const _user = await this.usersService.findById(news.authorId);\n      if (!_user) {\n        throw new HttpException(\n          'Не существует такого автора',\n          HttpStatus.BAD_REQUEST\n        );\n      }\n      const _category = await this.categoriesService.findById(news.categoryId);\n      if (!_category) {\n        throw new HttpException(\n          'Не существует такой категории',\n          HttpStatus.BAD_REQUEST\n        );\n      }\n\n      const _newsEntity = new NewsEntity();\n      if (cover?.filename) {\n        _newsEntity.cover = NEWS_PATH + cover.filename;\n      }\n      _newsEntity.title = news.title;\n      _newsEntity.description = news.description;\n      _newsEntity.user = _user;\n      _newsEntity.category = _category;\n\n      const _news = await this.newsService.create(_newsEntity);\n      // await this.mailService.sendNewNewsForAdmins(\n      //   ['egorlo059@gmail.com'],\n      //   _news\n      // );\n      return _news;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  @Get(':id/detail')\n  @ApiOperation({ summary: 'News details' })\n  @ApiParam({ name: 'id', type: 'number' })\n  @ApiResponse({\n    status: 200,\n    description: 'News details successfully received',\n    type: NewsEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async getByIdDetail(@Param() params: NewsIdDto) {\n    const newsData = await this.newsService.findById(params.id);\n    const news = JSON.parse(JSON.stringify(newsData), function (key, value) {\n      if (key == 'password' || key == 'email') return;\n      return value;\n    });\n\n    const commentsData = await this.commentsService.findAll(params.id);\n    const comments = JSON.parse(\n      JSON.stringify(commentsData),\n      function (key, value) {\n        if (key == 'password' || key == 'email') return;\n        return value;\n      }\n    );\n\n    return { news, comments };\n  }\n\n  @Get('score')\n  async getScore() {\n    const data = await this.newsService.findAll();\n\n    await redis.flushdb();\n    const users = {};\n    const usersSet = new Set();\n\n    data.news.forEach(async (news) => {\n      if (usersSet.has(news.user.firstName + ' ' + news.user.lastName)) {\n        users[`${news.user.firstName} ${news.user.lastName}`] += 1;\n      } else {\n        usersSet.add(news.user.firstName + ' ' + news.user.lastName);\n        users[`${news.user.firstName} ${news.user.lastName}`] = 1;\n      }\n    });\n\n    Object.keys(users).forEach((key) => {\n      redis.zadd('authtors', users[key], key);\n    });\n    return await redis.zrevrange('authtors', 0, 10, 'WITHSCORES');\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport {\n  Entity,\n  Column,\n  // PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  ManyToOne,\n  OneToMany,\n  ObjectIdColumn,\n  ObjectID,\n} from 'typeorm';\nimport { CategoriesEntity } from '../categories/categories.entity';\nimport { UsersEntity } from '../users/users.entity';\nimport { CommentsEntity } from './comments/comments.entity';\n\n@Entity('news')\nexport class NewsEntity {\n  // @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  @ApiProperty({ example: 'News id', description: 'News id' })\n  id: ObjectID;\n\n  @Column('text')\n  @ApiProperty({ example: 'News title', description: 'News title' })\n  title: string;\n\n  @Column('text')\n  @ApiProperty({ example: 'News description', description: 'News description' })\n  description: string;\n\n  @Column('text', { nullable: true })\n  @ApiProperty({ example: 'News cover', description: 'News cover' })\n  cover: string;\n\n  @Column(() => CategoriesEntity)\n  @ManyToOne(() => CategoriesEntity, (category) => category.news)\n  @ApiProperty({\n    example: 'Entity CategoriesEntity',\n    description: 'Entity CategoriesEntity',\n  })\n  category: CategoriesEntity;\n\n  @Column(() => UsersEntity)\n  @ManyToOne(() => UsersEntity, (user) => user.news)\n  user: UsersEntity;\n\n  // @Column(() => CommentsEntity)\n  @OneToMany(() => CommentsEntity, (comments) => comments.news)\n  @ApiProperty({\n    example: 'Array entities CommentsEntity',\n    description: 'Array entities CommentsEntity',\n  })\n  comments: CommentsEntity[];\n\n  @CreateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date create news',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date update news',\n  })\n  updatedAt: Date;\n}\n","import { Module } from '@nestjs/common';\nimport { NewsController } from './news.controller';\nimport { NewsService } from './news.service';\nimport { CommentsModule } from './comments/comments.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { NewsEntity } from './news.entity';\nimport { UsersModule } from '../users/users.module';\nimport { MailModule } from '../mail/mail.module';\nimport { CategoriesModule } from '../categories/categories.module';\n\n@Module({\n  controllers: [NewsController],\n  providers: [NewsService],\n  imports: [\n    TypeOrmModule.forFeature([NewsEntity]),\n    CommentsModule,\n    MailModule,\n    UsersModule,\n    CategoriesModule,\n  ],\n  exports: [NewsService],\n})\nexport class NewsModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { NewsEntity } from './news.entity';\n\n@Injectable()\nexport class NewsService {\n  constructor(\n    @InjectRepository(NewsEntity)\n    private readonly newsRepository: Repository<NewsEntity>\n  ) {}\n\n  async create(news: NewsEntity) {\n    return await this.newsRepository.save(news);\n  }\n\n  async findAll(): Promise<{ news: NewsEntity[] }> {\n    const data = await this.newsRepository.find();\n    return { news: data };\n  }\n\n  async edit(news: NewsEntity, idNews: number) {\n    const data = await this.newsRepository.update(idNews, news);\n    return data;\n  }\n\n  async findById(id: string): Promise<NewsEntity> {\n    console.log('id:', id);\n    const data = await this.newsRepository.findOneById(id);\n    console.log('data:', data);\n\n    return data;\n  }\n\n  async remove(id: string) {\n    const _news = await this.findById(id);\n    if (_news) {\n      await this.newsRepository.remove(_news);\n      return true;\n    }\n    return false;\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsEmail } from 'class-validator';\nimport { Role } from '../../auth/role/role.enum';\n\nexport class UserCreateDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ example: 'User first name', description: 'User first name' })\n  firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: 'User last name',\n    description: 'User last name',\n  })\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  @ApiProperty({\n    example: 'User email',\n    description: 'User email',\n  })\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: 'User password',\n    description: 'User password',\n  })\n  password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: 'User role',\n    description: 'User role',\n  })\n  role: Role;\n}\n","import {\n  Body,\n  Post,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { Controller } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { HelperFileLoaderUser } from '../../utils/helperFileLoaderUser';\nimport { imageFileFilter } from '../../utils/imageFileFilter';\nimport { UserCreateDto } from '../dto/user-create.dto';\nimport { UsersEntity } from '../users.entity';\nimport { UsersService } from '../users.service';\nimport { hash } from '../../utils/crypto';\nimport { JwtAuthGuard } from '../../auth/jwt-auth.guard';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nconst USER_PATH = '/user-static/';\nconst usersHelperFileLoader = new HelperFileLoaderUser();\n\n@Controller('profile')\n@ApiBearerAuth()\n@ApiTags('Profile')\nexport class ProfileController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Post('edit')\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: usersHelperFileLoader.destinationPath,\n        filename: usersHelperFileLoader.customFileName,\n      }),\n      fileFilter: imageFileFilter,\n    })\n  )\n  @ApiOperation({ summary: 'User profile edit' })\n  @ApiResponse({\n    status: 200,\n    description: 'User profile successfully edit',\n    type: UsersEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async edit(\n    @Request() req,\n    @Body() user: UserCreateDto,\n    @UploadedFile() avatar: Express.Multer.File\n  ) {\n    try {\n      const _userEntity = new UsersEntity();\n      if (avatar?.filename) {\n        _userEntity.avatar = USER_PATH + avatar.filename;\n      }\n      _userEntity.firstName = user.firstName;\n      _userEntity.lastName = user.lastName;\n      _userEntity.email = user.email;\n      _userEntity.password = await hash(user.password);\n      const result = await this.usersService.edit(_userEntity, req.user.id);\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import { forwardRef, Module } from '@nestjs/common';\nimport { UsersModule } from '../users.module';\nimport { ProfileController } from './profile.controller';\n\n@Module({\n  controllers: [ProfileController],\n  imports: [forwardRef(() => UsersModule)],\n})\nexport class ProfileModule {}\n","import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Render,\n  UploadedFile,\n  UseInterceptors,\n  Request,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersEntity } from './users.entity';\nimport { UserCreateDto } from './dto/user-create.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { HelperFileLoaderUser } from '../utils/helperFileLoaderUser';\nimport { imageFileFilter } from '../utils/imageFileFilter';\nimport {\n  ApiBearerAuth,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\n\nconst USER_PATH = '/user-static/';\nconst usersHelperFileLoader = new HelperFileLoaderUser();\n\n@Controller('users')\n@ApiBearerAuth()\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {\n    usersHelperFileLoader.path = USER_PATH;\n  }\n\n  @Post('create')\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: usersHelperFileLoader.destinationPath,\n        filename: usersHelperFileLoader.customFileName,\n      }),\n      fileFilter: imageFileFilter,\n    })\n  )\n  @ApiOperation({ summary: 'User creation' })\n  @ApiResponse({\n    status: 200,\n    description: 'User successfully created',\n    type: UsersEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  async create(\n    @Body() user: UserCreateDto,\n    @UploadedFile() avatar: Express.Multer.File\n  ): Promise<UsersEntity> {\n    try {\n      let avatarPath = null;\n      if (avatar?.filename) {\n        avatarPath = USER_PATH + avatar.filename;\n      }\n      return this.usersService.create(user, avatarPath ? avatarPath : null);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  @Get('login')\n  @Render('login')\n  @ApiOperation({ summary: 'Get user login' })\n  @ApiResponse({\n    status: 200,\n    description: 'User successfully login',\n    type: UsersEntity,\n  })\n  @ApiResponse({\n    status: 401,\n    description: 'Unauthorized Error',\n    type: Error,\n  })\n  async getLogin(@Request() req) {\n    const cookies = req.cookies?.user ? await req.cookies : null;\n    return { cookies };\n  }\n\n  @Get('register')\n  @Render('register')\n  @ApiOperation({ summary: 'Get user register' })\n  @ApiResponse({\n    status: 200,\n    description: 'User successfully registered',\n    type: UsersEntity,\n  })\n  @ApiResponse({\n    status: 403,\n    description: 'Forbidden',\n    type: Error,\n  })\n  getRegister() {\n    return;\n  }\n}\n","import {\n  Entity,\n  Column,\n  // PrimaryGeneratedColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n  OneToMany,\n  ObjectIdColumn,\n  ObjectID,\n} from 'typeorm';\nimport { NewsEntity } from '../news/news.entity';\nimport { CommentsEntity } from '../news/comments/comments.entity';\nimport { Role } from '../auth/role/role.enum';\nimport { IsEnum } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity('users')\nexport class UsersEntity {\n  // @PrimaryGeneratedColumn()\n  @ObjectIdColumn()\n  @ApiProperty({ example: 'User id', description: 'User id' })\n  id: ObjectID;\n\n  @Column('text')\n  @ApiProperty({ example: 'User first name', description: 'User first name' })\n  firstName: string;\n\n  @Column('text')\n  @ApiProperty({\n    example: 'User last name',\n    description: 'User last name',\n  })\n  lastName: string;\n\n  @Column('text')\n  @ApiProperty({\n    example: 'User email',\n    description: 'User email',\n  })\n  email: string;\n\n  @Column('text')\n  @ApiProperty({\n    example: 'User password',\n    description: 'User password',\n  })\n  password: string;\n\n  @Column('text')\n  @IsEnum(Role)\n  @ApiProperty({\n    example: 'User role',\n    description: 'User role',\n  })\n  roles: Role;\n\n  @OneToMany(() => NewsEntity, (news) => news.user)\n  news: NewsEntity[];\n\n  @OneToMany(() => CommentsEntity, (comments) => comments.user)\n  comments: CommentsEntity[];\n\n  @Column('text', { nullable: true })\n  @ApiProperty({\n    example: 'User avatar',\n    description: 'User avatar',\n  })\n  avatar: string;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date create user',\n  })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  @ApiProperty({\n    description: 'Date update user',\n  })\n  updatedAt: Date;\n}\n","import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersService } from './users.service';\nimport { UsersEntity } from './users.entity';\nimport { AuthModule } from '../auth/auth.module';\nimport { UsersController } from './users.controller';\nimport { ProfileModule } from './profile/profile.module';\n\n@Module({\n  providers: [UsersService],\n  controllers: [UsersController],\n  imports: [\n    TypeOrmModule.forFeature([UsersEntity]),\n    forwardRef(() => AuthModule),\n    ProfileModule,\n  ],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n","import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { UsersEntity } from './users.entity';\nimport { Role } from '../auth/role/role.enum';\nimport { UserCreateDto } from './dto/user-create.dto';\nimport { hash } from '../../utils/crypto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UsersEntity)\n    private readonly usersRepository: Repository<UsersEntity>\n  ) {}\n\n  async create(user: UserCreateDto, avatarPath?: string) {\n    const userEntity = new UsersEntity();\n    userEntity.firstName = user.firstName;\n    userEntity.lastName = user.lastName;\n    userEntity.email = user.email;\n    userEntity.password = await hash(user.password);\n    userEntity.roles = user.role;\n    userEntity.avatar = avatarPath ? avatarPath : null;\n\n    return await this.usersRepository.save(userEntity);\n  }\n\n  async findById(id: string): Promise<UsersEntity> {\n    const data = await this.usersRepository.findOneById(id);\n    return data;\n  }\n\n  async findByEmail(email: string): Promise<UsersEntity> {\n    const data = await this.usersRepository.find({\n      where: {\n        email: email,\n      },\n    });\n\n    return data[0];\n  }\n\n  async setModerator(idUser: string): Promise<UsersEntity> {\n    const _user = await this.findById(idUser);\n    if (!_user) {\n      throw new UnauthorizedException();\n    }\n    _user.roles = Role.Moderator;\n    return this.usersRepository.save(_user);\n  }\n\n  async edit(user: UsersEntity, idUser: string) {\n    const result = await this.usersRepository.update(idUser, user);\n    return result;\n  }\n\n  async findAll(): Promise<UsersEntity[]> {\n    const data = await this.usersRepository.find();\n    return data;\n  }\n}\n","import * as bcrypt from 'bcrypt';\n\n// хэширование строки\nexport function hash(text: string | Buffer): Promise<string> {\n  return new Promise((resolve) => {\n    bcrypt.hash(text, 10, (_err, hash) => {\n      resolve(hash);\n    });\n  });\n}\n// метод сравнения захэшированной строки с незахэшированной\nexport function compare(text: string | Buffer, hash: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    bcrypt.compare(text, hash, (_err, result) => {\n      resolve(result);\n    });\n  });\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nconst publicPath = './public';\nlet path = publicPath;\n\nexport class HelperFileLoaderNews {\n  set path(_path) {\n    path = publicPath + _path;\n  }\n\n  public customFileName(req, file, cb) {\n    const originalName = file.originalname.split('.');\n    const fileExtension = originalName[originalName.length - 1];\n    cb(null, `${uuidv4()}.${fileExtension}`);\n  }\n\n  public destinationPath(req, file, cb) {\n    cb(null, path);\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nconst publicPath = './public';\nlet path = publicPath;\n\nexport class HelperFileLoaderUser {\n  set path(_path) {\n    path = publicPath + _path;\n  }\n\n  public customFileName(req, file, cb) {\n    const originalName = file.originalname.split('.');\n    const fileExtension = originalName[originalName.length - 1];\n    cb(null, `${uuidv4()}.${fileExtension}`);\n  }\n\n  public destinationPath(req, file, cb) {\n    cb(null, path);\n  }\n}\n","export const imageFileFilter = (req: Request, file: any, callback: any) => {\n  if (!file.originalname.match(/\\.(jpg|JPG|jpeg|JPEG|png|PNG|gif|GIF)$/)) {\n    return callback(\n      new Error(\n        'Only image files are allowed! Image files allowed such as png, jpeg, jpg, gif'\n      ),\n      false\n    );\n  }\n  callback(null, true);\n};\n","import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { CategoriesEntity } from './app/categories/categories.entity';\nimport { CommentsEntity } from './app/news/comments/comments.entity';\nimport { NewsEntity } from './app/news/news.entity';\nimport { UsersEntity } from './app/users/users.entity';\n\n@Injectable()\nexport class PgConfigService implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: 'mongodb',\n      database: 'news_blog',\n      synchronize: true,\n      logging: ['query', 'error'],\n      entities: [UsersEntity, NewsEntity, CommentsEntity, CategoriesEntity],\n      migrations: [],\n      subscribers: [],\n    };\n  }\n}\n","import * as bcrypt from 'bcrypt';\n\n// хэширование строки\nexport function hash(text: string | Buffer): Promise<string> {\n  return new Promise((resolve) => {\n    bcrypt.hash(text, 10, (_err, hash) => {\n      resolve(hash);\n    });\n  });\n}\n// метод сравнения захэшированной строки с незахэшированной\nexport function compare(text: string | Buffer, hash: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    bcrypt.compare(text, hash, (_err, result) => {\n      resolve(result);\n    });\n  });\n}\n","module.exports = require(\"@nestjs-modules/mailer\");","module.exports = require(\"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/common/pipes\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/event-emitter\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"@nestjs/websockets\");","module.exports = require(\"bcrypt\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"class-validator\");","module.exports = require(\"ioredis\");","module.exports = require(\"multer\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"socket.io\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","module.exports = require(\"uuid\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { NestExpressApplication } from '@nestjs/platform-express';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule, {\n    cors: true,\n  });\n\n  const config = new DocumentBuilder()\n    .setTitle('gb-demo-app')\n    .setDescription('The API description gb-demo-app')\n    .setVersion('1.0')\n    .addTag('gb-demo-app')\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('api', app, document);\n\n  const globalPrefix = 'api';\n\n  app.setGlobalPrefix(globalPrefix);\n  app.useStaticAssets('./public/');\n\n  const port = process.env.PORT || 3001;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}